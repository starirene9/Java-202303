Index: src/Hello.java
===================================================================
diff --git a/src/Hello.java b/src/Hello.java
deleted file mode 100644
--- a/src/Hello.java	(revision af8d391b3797cf58cb5dc6c547d377d4563ef143)
+++ /dev/null	(revision af8d391b3797cf58cb5dc6c547d377d4563ef143)
@@ -1,13 +0,0 @@
-import java.util.Scanner;
-
-public class Hello {
-
-    public static void main(String[] args) {
-        String name = "김철수";
-
-        double rn = Math.random();
-
-      Scanner sc =  new Scanner(System.in);
-
-    }
-}
Index: src/fruit/Banana.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/fruit/Banana.java b/src/fruit/Banana.java
new file mode 100644
--- /dev/null	(date 1680143582238)
+++ b/src/fruit/Banana.java	(date 1680143582238)
@@ -0,0 +1,4 @@
+package fruit;
+
+public class Banana {
+}
Index: src/juice/Apple.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/juice/Apple.java b/src/juice/Apple.java
new file mode 100644
--- /dev/null	(date 1680143506004)
+++ b/src/juice/Apple.java	(date 1680143506004)
@@ -0,0 +1,8 @@
+package juice;
+
+public class Apple {
+
+    public Apple() {
+        System.out.println("juice의 Apple");
+    }
+}
Index: src/day04/PackagePractice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/PackagePractice.java b/src/day04/PackagePractice.java
new file mode 100644
--- /dev/null	(date 1680145252721)
+++ b/src/day04/PackagePractice.java	(date 1680145252721)
@@ -0,0 +1,17 @@
+package day04;
+
+//import fruit.Banana; //다른 패키지에 있는거 불러와서 쓸때 이거 사용시 앞의 식별자 떼기 가능
+//import fruit.Grape;
+import fruit.*; //패키지는 다 소문자 관리
+
+public class PackagePractice {
+
+    public static void main(String[] args) {
+
+        new fruit.Apple();
+        new Grape();
+
+        new fruit.Banana(); //다른 패키지에 있으니 구분 필요
+
+    }
+}
Index: src/fruit/Grape.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/fruit/Grape.java b/src/fruit/Grape.java
new file mode 100644
--- /dev/null	(date 1680143582245)
+++ b/src/fruit/Grape.java	(date 1680143582245)
@@ -0,0 +1,4 @@
+package fruit;
+
+public class Grape {
+}
Index: src/day04/array/StringList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/array/StringList.java b/src/day04/array/StringList.java
new file mode 100644
--- /dev/null	(date 1680224679762)
+++ b/src/day04/array/StringList.java	(date 1680224679762)
@@ -0,0 +1,112 @@
+package day04.array;
+
+import java.util.Arrays;
+
+//스트링배열을 제어하는 설계도
+public class StringList {
+    //필드
+    String[] sArr;
+
+    //생성자
+    StringList() {
+        System.out.println("첫 번째 생성자 끌려옴");
+        sArr = new String[0];
+    }
+
+    StringList(String... initData) {
+        sArr = new String[initData.length];
+        for (int i = 0; i < sArr.length; i++) {
+            sArr[i] = initData[i];
+        }
+    }
+
+
+    //메서드
+    //배열에 저장된 데이터 수를 알려주는 기능
+    int size() {
+        return sArr.length;
+    }
+    //배열의 맨 끝에 데이터를 추가하는 기능
+    void push(String newData) {
+        String[] temp = new String[sArr.length + 1];
+        for (int i = 0; i < sArr.length ; i++) {
+            temp[i] = sArr[i];
+        }
+        temp[temp.length - 1] = newData;
+        sArr = temp;
+    }
+    //배열 맨 끝 데이터 삭제하는 기능
+    String pop() {
+        String deleteTarget = sArr[sArr.length -1];
+        //지우기 전에 찾아놓고
+        String[] temp = new String[sArr.length-1];
+        for (int i = 0; i < temp.length ; i++) {
+            temp[i] = sArr[i];
+        }
+        sArr = temp;
+        return deleteTarget;
+        //지우고 리턴
+    }
+    // 배열 내부테이터 출력
+   public String toString() {
+        return Arrays.toString(sArr);
+    }
+    // 배열이 텅텅비어있는지 확인
+    boolean isEmpty() {
+       return sArr.length == 0;
+
+    }
+    // 배열 데이터 전체삭제 : 빈 배열 꽂기
+    void clear() {
+        sArr = new String[0];
+    }
+
+    // 인덱스 탐색 (indexOf)
+    int indexOf(String target) {
+        for (int i = 0; i < sArr.length; i++) {
+            if (target.equals(sArr[i])) {
+                return i;
+            }
+        }
+        return -1;
+    }
+
+    // 자료 유무 확인 (includes)
+    boolean includes(String target) {
+        return indexOf(target) != -1;
+    }
+
+    // 중간 삭제 (remove) : 인덱스로 삭제
+    String remove(int index) {
+        if (index < 0 || index > sArr.length - 1) return null;
+
+        // 중간 삭제 (remove)
+        String targetData = sArr[index];
+        for (int i = index; i < sArr.length - 1; i++) {
+            sArr[i] = sArr[i + 1];
+        }
+        pop();
+        return targetData;
+    }
+    // 중간 삭제 (remove) : 값으로 삭제
+    String remove(String target) {
+        return remove(indexOf(target));
+    }
+
+    // 중간 삽입 (insert)
+    void insert(int index, String newData) {
+
+        if (index < 0 || index > sArr.length - 1) return;
+
+        String[] temp = new String[sArr.length + 1];
+        for (int i = 0; i < sArr.length; i++) {
+            temp[i] = sArr[i];
+        }
+        for (int i = temp.length - 1; i > index; i--) {
+            temp[i] = temp[i-1];
+        }
+        temp[index] = newData;
+        sArr = temp;
+    }
+
+}
Index: src/day04/array/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/array/Main.java b/src/day04/array/Main.java
new file mode 100644
--- /dev/null	(date 1680147906172)
+++ b/src/day04/array/Main.java	(date 1680147906172)
@@ -0,0 +1,27 @@
+package day04.array;
+
+public class Main {
+
+    public static void main(String[] args) {
+        
+        StringList foodList = new StringList();
+        foodList.push("짜장면");
+        foodList.push("볶음밥");
+        foodList.push("탕수육");
+
+        StringList userNameList = new StringList();
+        userNameList.push("김철수");
+        userNameList.push("박영희");
+
+        foodList.pop();
+        foodList.pop();
+
+//        foodList.clear();
+        System.out.println("foodList 비었니? " + foodList.isEmpty());
+
+        System.out.println("foodList = " + foodList);
+        System.out.println("foodList.size() = " + foodList.size());
+        System.out.println("userNameList = " + userNameList);
+        System.out.println("userNameList.size() = " + userNameList.size());
+    }
+}
Index: src/day02/SwitchExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/SwitchExample.java b/src/day02/SwitchExample.java
new file mode 100644
--- /dev/null	(date 1680067101737)
+++ b/src/day02/SwitchExample.java	(date 1680067101737)
@@ -0,0 +1,56 @@
+package day02;
+
+import java.util.Scanner;
+
+public class SwitchExample {
+
+    //자바 상수 (psf)
+    public static final String SPRING = "봄",
+            SUMMER ="여름",
+            FALL="가을",
+            WINTER="겨울";
+
+    public static void main(String[] args) {
+
+        System.out.println("### 여행지 추천 ###");
+        System.out.println("[원하는 계절을 입력하세요]");
+        System.out.print(">>"); //봄, 여름, 가을, 겨울
+
+        Scanner sc = new Scanner(System.in);
+
+        String season = sc.nextLine();
+
+        //switch 문에는 정수, 문자형 변수를 써야 함
+        switch (season.toLowerCase()) {
+            //case에는 변수 불가능 상수만 가능
+            case SPRING : // case "summer" : case "하":
+                System.out.println("봄에는 여의도를 가세요!");
+                break; // switch문 탈출
+
+            case SUMMER:
+//                case "여름": case "summer": //여러 레터가 가능하게 하는법
+                System.out.println("여름에는 홍천을 가세요!");
+                break;
+            case FALL :
+                System.out.println("가을에는 춘천을 가세요!");
+                break;
+            case WINTER :
+                System.out.println("겨울에는 스키장을 가세요!");
+            default : // else와 같은 효과
+                System.out.println("계절을 잘 입력하세요. ^^*");
+        }
+
+        System.out.println("=========");
+        System.out.print("정말로 종료합니까? [y/n]>>");
+        String answer = sc.nextLine();
+
+        switch (answer.toLowerCase().charAt(0)) {
+            case 'y': case 'ㅛ':
+                System.out.println("종료합니다.");
+                break;
+            case 'n' : case 'ㅜ':
+                System.out.println("취소합니다.");
+                break;
+        }
+    }
+}
Index: src/day05/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/Player.java b/src/day05/Player.java
new file mode 100644
--- /dev/null	(date 1680230061145)
+++ b/src/day05/Player.java	(date 1680230061145)
@@ -0,0 +1,63 @@
+package day05;
+
+public class Player {
+
+    // 필드
+    String nickName; // 캐릭터 닉네임
+    int level; // 레벨
+    int hp; // 체력
+
+
+    // 생성자 : shift 2번 누르고 검색 혹은 command +  n
+    // // option  command v는 자동 생성, alt enter 유용
+    public Player() {
+        this("이름없음");
+        //나의 또다른 생성자를 불러 주세용
+        System.out.println("1번 생성자 호출 ");
+        this.nickName = "이름없음";
+//        this.level = 1;
+//        this.hp = 50;
+    }
+
+    public Player(String nickName) {
+        this(nickName, 1, 50);
+        //나의 또 다른 생성자를 불러 주세요  < = 구분은 파라미터로 한다
+        System.out.println("2번 생성자 호출 ");
+//        this.nickName = nickName;
+//        this.level = 1;
+//        this.hp = 50;
+        //가시성있게 필드는 this 붙일 것
+    }
+
+    public Player(String nickName, int level, int hp) {
+        this.nickName = nickName;
+        this.level = level;
+        this.hp = hp;
+    }
+
+    void levelUp(Player this){ // Player this는 숨어 있고 써도 되고 안 써도 됨
+
+    }
+    // 기능 - 메서드
+    void attack(Player target) { // 무조건 attack에는 Player 타입이 들어옴
+        //내가 나를 때린 경우 감소 하지 않음
+        if(this == target) return;
+
+        //주소가 같다.
+        System.out.println("target의 주소 : " + target);
+        System.out.println("this의 주소 : " + this);
+
+        // 맞은녀석의 체력을 10~15 랜덤으로 감소시킬거임
+        int damage = (int) (Math.random() * 6 + 10);
+        target.hp -= damage;
+
+        // 전투로그를 출력할거임
+        // "가해자가 피해자를 공격해서 xxx의 피해를 입힘"
+        System.out.printf("%s님이 %s님을 공격해서 %d의 피해를 입힙!\n"
+                , this.nickName, target.nickName, damage);
+        //this는 myself의미 : 때린에는 this.nickName으로 찾는다.
+        // void attack(Player this, Player target)에서 Player this 는 자동으로 들어감
+    }
+
+
+}
\ No newline at end of file
Index: src/day04/StringCompare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/StringCompare.java b/src/day04/StringCompare.java
new file mode 100644
--- /dev/null	(date 1680143012419)
+++ b/src/day04/StringCompare.java	(date 1680143012419)
@@ -0,0 +1,24 @@
+package day04;
+
+import java.util.Scanner;
+
+public class StringCompare {
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+
+        String myName = "홍길동";
+        String inputName = sc.nextLine();
+
+        System.out.println("myName = " + myName);
+        System.out.println("inputName = " + inputName);
+
+        if (myName.equals(inputName)) {
+            System.out.println("두 이름이 일치함!");
+        } else {
+            System.out.println("두 이름이 일치하지 않음!");
+        }
+
+    }
+}
\ No newline at end of file
Index: src/day02/ArrayBasic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/ArrayBasic.java b/src/day02/ArrayBasic.java
new file mode 100644
--- /dev/null	(date 1680068317311)
+++ b/src/day02/ArrayBasic.java	(date 1680068317311)
@@ -0,0 +1,41 @@
+package day02;
+
+import java.util.Arrays;
+
+public class ArrayBasic {
+    public static void main(String[] args) {
+
+        // 배열 객체를 생성
+        int[] arr = new int[5];
+        //arr은 int 배열타입 : 5개의 방을 빌린 주소를 arr에 담음
+        System.out.println("arr = " + arr); //주소값이 담겨있음
+
+        arr[0] = 50;
+        arr[1] = 77;
+        arr[2] = arr[0] +20;
+        arr[3] = (int) 66.7;
+        arr[4] = 100;
+
+        //배열의 길이 - 저장 데이터 개수
+        //자바의 배열 immutable(불변성)
+
+        System.out.printf("%d번 데이터 : %d\n", arr.length);
+
+        //배열 반복문 처리 - fori
+        for (int i = 0; i < arr.length; i++) {
+            System.out.printf("%d번 데이터 : %d\n", i + 1, arr[i]);
+            //1번 데이터 : 50
+            //2번 데이터 : 77
+            //3번 데이터 : 70 이런 식으로 나옴
+        }
+        System.out.println("==================");
+
+        //foreach문 - 단축키 iter
+        for (int n : arr) { //배열 for of -> :로 변환
+            System.out.printf("데이터 : %d\n", n);
+        }
+
+        // 배열 내부데이터 문자열로 출력 : 중요~!!!!
+        System.out.println(Arrays.toString(arr));
+    }
+}
Index: src/day05/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/Main.java b/src/day05/Main.java
new file mode 100644
--- /dev/null	(date 1680230061125)
+++ b/src/day05/Main.java	(date 1680230061125)
@@ -0,0 +1,16 @@
+package day05;
+
+public class Main {
+
+    public static void main(String[] args) {
+
+        Player parking = new Player("주차왕파킹");
+        Player gondue = new Player("딸긔겅듀");
+        Player noname = new Player();
+
+        gondue.attack(parking);
+        System.out.println("porking의 주소 :" + parking);
+        System.out.println("주차왕 남은체력 : " +parking.hp);
+
+    }
+}
Index: src/day04/FieldMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/FieldMain.java b/src/day04/FieldMain.java
new file mode 100644
--- /dev/null	(date 1680140609035)
+++ b/src/day04/FieldMain.java	(date 1680140609035)
@@ -0,0 +1,12 @@
+package day04;
+
+public class FieldMain {
+
+    public static void main(String[] args) {
+
+        FieldAndLocal fl = new FieldAndLocal();
+        System.out.println(fl.a); //객체를 생성한 이후에 필드 a에 접근 가능
+
+        fl.mm(300); //얘의 int를 무조건 호출해야함
+    }
+}
Index: src/day05/member/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/Member.java b/src/day05/member/Member.java
new file mode 100644
--- /dev/null	(date 1680230061132)
+++ b/src/day05/member/Member.java	(date 1680230061132)
@@ -0,0 +1,32 @@
+package day05.member;
+
+// 이 클래스의 역할 : 1명으 회원정보를 묶어주는 역할 => 여러명의 회원 정보를 담아주는 애가 필요
+public class Member {
+    // 필드 설계
+    String email;
+    String password;
+    String memberName;
+    int memberId;
+    Gender gender; //열거형 Gender
+    int age;
+
+    // 생성자 전체 command n
+    public Member(String email, String password, String memberName, int memberId, Gender gender, int age) {
+        this.email = email;
+        this.password = password;
+        this.memberName = memberName;
+        this.memberId = memberId;
+        this.gender = gender;
+        this.age = age;
+    }
+
+    //회원정보를 문자열로 만들어서 리턴하는 기능
+    String inform() {
+        //male, female 이 아니고 남성 여성으로 성별 바꿔서 출력하는 기능
+        String convertGender = (gender == Gender.MALE)? "남성":"여성";
+        //식변번호 이메일 이름 성별 나이
+        return String.format("# %d번 | %s | %s | %s | %d세"
+                , this.memberId , this.email, this.memberName,
+                                        convertGender, this.age);
+    }
+}
Index: src/day05/member/요구사항.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/요구사항.md b/src/day05/member/요구사항.md
new file mode 100644
--- /dev/null	(date 1680226181197)
+++ b/src/day05/member/요구사항.md	(date 1680226181197)
@@ -0,0 +1,10 @@
+#회원관리 시스템
+
+- 회원 정보 : 이메일, 비밀번호, 회원식별번호, 성별, 나이 
+
+- 회원의 정보를 등록할 수 있다. 
+- 개별 회원의 정보를 이메일을 통해 조회할 수 있다. 
+- 모든 회원의 목록을 조회할 수 있다. 
+- 회원의 비밀번호를 수정할 수 있다. 
+- 회원의 정보를 삭제할 수 있다. 
+- 
\ No newline at end of file
Index: src/day05/member/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/Test.java b/src/day05/member/Test.java
new file mode 100644
--- /dev/null	(date 1680230061134)
+++ b/src/day05/member/Test.java	(date 1680230061134)
@@ -0,0 +1,20 @@
+package day05.member;
+
+public class Test {
+
+    public static void main(String[] args) {
+//
+        MemberRepository mr = new MemberRepository();
+
+        Member thief = new Member("ㅋㅋㅋ", "123456", "화이팅", 4,
+                Gender.MALE, 5
+        );
+
+        mr.addMember(thief);
+//        mr.showMembers();
+
+        boolean flag = mr.isDuplicateEmail("sdfsdfsdf");
+        System.out.println("flag = " + flag);
+
+    }
+}
Index: src/day05/member/Gender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/Gender.java b/src/day05/member/Gender.java
new file mode 100644
--- /dev/null	(date 1680230061136)
+++ b/src/day05/member/Gender.java	(date 1680230061136)
@@ -0,0 +1,7 @@
+package day05.member;
+
+public enum Gender {
+
+    FEMALE, MALE
+    //개수가 정해져있는건 이렇게 쓰면 됨
+}
Index: src/day05/member/MemberView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/MemberView.java b/src/day05/member/MemberView.java
new file mode 100644
--- /dev/null	(date 1680238441125)
+++ b/src/day05/member/MemberView.java	(date 1680238441125)
@@ -0,0 +1,143 @@
+package day05.member;
+
+import java.util.Scanner;
+
+// 역할: 회원관리 앱의 입출력을 담당
+public class MemberView {
+
+    Scanner sc;
+    MemberRepository mr;
+    //정보 가지고 있는 데이터 저장소 끌어 오기 : 껍데기
+
+    public MemberView() {
+        this.sc = new Scanner(System.in);
+        this.mr = new MemberRepository();
+        // 실체를 불러옴
+    }
+
+    /**
+     * 초기 메인 화면을 출력
+     */
+    void mainView() {
+        System.out.println("\n##### 회원 관리 시스템 #####");
+        System.out.println("* 1. 회원 정보 등록하기");
+        System.out.println("* 2. 개별회원 정보 조회하기");
+        System.out.println("* 3. 전체회원 정보 조회하기");
+        System.out.println("* 4. 회원 정보 수정하기");
+        System.out.println("* 5. 회원 정보 삭제하기");
+        System.out.println("* 6. 프로그램 끝내기");
+        System.out.println("=============================");
+    }
+
+    /**
+     * 프로그램 화면 흐름을 제어하는 기능
+     */
+    void viewProcess() {
+        while (true) {
+            mainView();
+            String menuNum = input(">> ");
+
+            switch (menuNum) {
+                case "1":
+                    signUp();
+                    break;
+                case "2":
+                    showDetailMember();
+                    break;
+                case "3":
+                    mr.showMembers();
+                    stop();
+                    break;
+                case "4":
+                    break;
+                case "5":
+                    break;
+                case "6":
+                    String answer = input("# 정말로 종료합니까? [y/n] : ");
+                    if (answer.toLowerCase().charAt(0) == 'y') {
+                        System.out.println("# 프로그램을 종료합니다.");
+                        System.exit(0);
+                    } else {
+                        continue;
+                    }
+                    break;
+                default:
+                    System.out.println("\n# 메뉴 번호를 다시 입력하세요");
+            }
+        }
+    }
+
+
+    String input(String message) {
+        System.out.print(message);
+        return sc.nextLine();
+    }
+
+    //엔터를 누르기 전까지 멈추는 기능
+    void stop() {
+        System.out.println("\n======엔터를 눌러서 계속... =======");
+        sc.nextLine();
+    }
+
+    //회원 등록 입력 처리
+    void signUp() {
+        System.out.println("\n# 회원 등록을 시작합니다!");
+
+        String email;
+        while (true) {
+            email = input("# 이메일 : ");
+            if (!mr.isDuplicateEmail(email)) { // 중복되지 않으면 break
+                break;
+            }
+            System.out.println("# 중복된 이메일입니다.");
+        }
+        String name = input("# 이름 : ");
+        String password = input("# 패스워드 : ");
+
+        Gender gender;
+        checkGender: while (true) {
+            String inputGender = input("# 성별[M/F] : ");
+            switch (inputGender.toUpperCase().charAt(0)) {
+                case 'M':
+                    gender = Gender.MALE;
+                    break checkGender;
+                case 'F':
+                    gender = Gender.FEMALE;
+                    break checkGender;
+                default:
+                    System.out.println("# 성별을 M/F로 정확히 입력하세요.");
+            }
+        }
+
+        int age = Integer.parseInt(input("# 나이 : "));
+
+        //실제 저장 명령
+        Member newMember = new Member(email, password, name,
+                mr.getLastMemberId() + 1, gender, age);
+        mr.addMember(newMember);
+
+        System.out.println("\n# 회원가입 성공!");
+        stop();
+
+    }
+
+    //메서드 안에 들어가 있는 경우 바깥으로 빼주기
+    void showDetailMember() {
+        // 이메일 입력하세요!
+        String inputEmail = input("# 조회를 시작합니다!\n# 이메일: ");
+        Member foundMember = mr.findByEmail(inputEmail);
+        // 찾은 회원의 정보 ~~~~~~
+        if (foundMember != null) {
+            System.out.println("\n========= 조회 결과 =========");
+            System.out.printf("# 이름: %s\n", foundMember.memberName);
+            System.out.printf("# 비밀번호: %s\n", foundMember.password);
+            System.out.printf("# 성별: %s\n", (foundMember.gender == Gender.MALE) ? "남성" : "여성");
+            System.out.printf("# 나이: %d세\n", foundMember.age);
+        } else {
+            System.out.println("\n# 조회된 회원이 없습니다.");
+        }
+        stop();
+    }
+}
+
+
Index: src/day05/member/MemberRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/MemberRepository.java b/src/day05/member/MemberRepository.java
new file mode 100644
--- /dev/null	(date 1680238441130)
+++ b/src/day05/member/MemberRepository.java	(date 1680238441130)
@@ -0,0 +1,89 @@
+package day05.member;
+
+//역할 : 회원 저장소 역할 : database의 역할 담당
+public class MemberRepository {
+
+    Member[] memberList;
+    // 멤버들을 여러명 저장할 수 있게 배열 만듦
+
+    // 기본 생성자 생성
+    public MemberRepository() {
+        this.memberList = new Member[3];
+        //세 명을 선 가입시키고 테스트 실행
+        memberList[0] = new Member("abc", "1234", "bitna", 1,
+                Gender.FEMALE, 30);
+        memberList[1] = new Member("def", "12345", "jw", 2,
+                Gender.MALE, 29);
+                memberList[2] = new Member("zzz", "123456", "helloWorld", 3,
+                        Gender.FEMALE, 1);
+    }
+    /*
+
+
+    * 모든 회원 정보를 출력해주는 메서드
+    */
+    void showMembers() {
+        System.out.printf("========현재 회원 정보 (총 %d명)==============\n"
+        ,memberList.length);
+        for (Member m : memberList) {
+            System.out.println(m.inform());
+        }
+
+    }
+        /*
+         * 회원 가입 기능
+         * @param1 -  newMember : 새롭게 회원가입하는 회원의 정보
+         * @return : 회원가입 성공 여부
+         *          성공시 true, 이메일이 중복되어 실패시 false
+         */
+
+    // 사용되지 않았으니 사용해라
+        boolean addMember(Member newMember) {
+            //이메일이 중복인가?
+            if (isDuplicateEmail(newMember.email)) return false; //가입해서는 안된다.
+            // 위의 것에 적용되지 않으면 아래 코드 실행 됨
+            //실제로 멤버를 추가하는 코드
+            Member[] temp = new Member[memberList.length+1];
+            for(int i = 0; i < memberList.length; i++) {
+                temp[i] = memberList[i];
+            }
+            temp[temp.length-1] = newMember;
+            memberList = temp;
+
+            return true;
+        }
+
+        /* 이메일의 중복 여부를 확인하는 기능
+        @param1 targetEmail : 검사 대상 이메일
+        @return : 중복되었을 시 true, 사용가능할 시 false
+         */
+
+        boolean isDuplicateEmail(String targetEmail) {
+            for (Member m: memberList) {
+                if (targetEmail.equals(m.email)){
+                    return true;
+                }
+            }
+            return false; //for 문이 끝나는 시점에 return 에 한번도 안걸림
+        }
+        // 마지막 회원의 번호를 알려주는 기능
+        int getLastMemberId() {
+            return memberList[memberList.length-1].memberId;
+        }
+
+        /*
+        * 이메일을 통해 특정 회원 객체를 찾아서 반환하는 기능
+        * @param1 email : 찾고 싶은 회원의 이메일
+        * @return : 찾은 회원의 객체정보, 못찾으면 null 반환
+        */
+
+        Member findByEmail(String email) {
+            for (Member m : memberList) {
+                if(email.equals(m.email)) {
+                   return m; // 회원 자체를 던져 버리기 : 여기 구간에서 틀림
+                }
+            }
+            return null;
+        }
+
+}
Index: src/day05/member/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/Main.java b/src/day05/member/Main.java
new file mode 100644
--- /dev/null	(date 1680230061147)
+++ b/src/day05/member/Main.java	(date 1680230061147)
@@ -0,0 +1,10 @@
+package day05.member;
+
+public class Main {
+
+    public static void main(String[] args) {
+
+        MemberView mv = new MemberView();
+        mv.viewProcess();
+    }
+}
Index: src/day02/ArrayCopy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/ArrayCopy.java b/src/day02/ArrayCopy.java
new file mode 100644
--- /dev/null	(date 1680136671312)
+++ b/src/day02/ArrayCopy.java	(date 1680136671312)
@@ -0,0 +1,41 @@
+//package day02;
+//
+//import java.util.Arrays;
+//
+//public class ArrayCopy {
+//
+//    public static void main(String[] args) {
+//
+//        //배열 복사 알고리즘
+////       String[] pets = new String[] {"멍멍이", "야옹이", "짹짹이"};
+//
+//        //선언과 동시에 초기화한다면 new Type[] 생략가능
+//        String[] pets = {"멍멍이", "야옹이", "짹짹이"};
+////        pets[0] = "멍멍이";
+////        pets[1] = "야옹이";
+////        pets[2] = "짹짹이";
+//
+////        for (String p : new String[] {"야옹이", "냥냥이", "콩콩이"}) {
+////        } // new String[] 붙여야함!!!!!중요
+//
+//        String[] pets = {"멍멍이", "야옹이", "짹짹이"};
+//
+//        // 1. 원본과 동일한 사이즈의 배열을 하나 더 생성
+//        String[] petsCopy = new String[pets.length];
+//
+//        // 2. 원본의 각 인덱스값들을 사본에 인덱스로 일일히 복사 : 이렇게 복사해야함
+//        for (int i = 0; i < pets.length ; i++) {
+//            petsCopy[i] = pets[i];
+//        }
+//
+//        pets[1] = "사마귀";
+//
+////      String[] petsCopy = pets; // 주소만 복사 : 이렇게 하면 안됨
+//        System.out.println("원본주소 : " + pets);
+//        System.out.println("사본주소 : " + petsCopy);
+//        //그냥 카피만 뜬건 주소가 똑같음
+//
+//        System.out.println("원본배열 : " + Arrays.toString(pets));
+//        System.out.println("원본배열 : " + Arrays.toString(petsCopy));
+//    }
+//}
Index: src/day02/ArrayPush.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/ArrayPush.java b/src/day02/ArrayPush.java
new file mode 100644
--- /dev/null	(date 1679975539689)
+++ b/src/day02/ArrayPush.java	(date 1679975539689)
@@ -0,0 +1,52 @@
+package day02;
+
+import java.util.Arrays;
+
+public class ArrayPush {
+
+    public static void push(int newData) {
+        // 1. 원본배열보다 1개 사이즈가 더 큰 새 배열 생성
+        int[] temp = new int[arr.length + 1];
+
+        // 2. 원본배열 데이터 새 배열로 복사
+        for (int i = 0; i < arr.length; i++) {
+            temp[i] = arr[i];
+        }
+
+        // 3. 새로운 데이터를 새 배열의 끝인덱스에 추가
+        temp[temp.length - 1] = newData;
+
+        // 4. 주소값 이전
+        arr = temp;
+        temp = null;
+    }
+
+    // 새로운 데이터를 배열에 맨 끝에 추가
+    static int[] arr = {10, 20, 30};
+
+    public static void main(String[] args) {
+
+        int newData = 40;
+
+//        // 1. 원본배열보다 1개 사이즈가 더 큰 새 배열 생성
+//        int[] temp = new int[arr.length + 1];
+//
+//        // 2. 원본배열 데이터 새 배열로 복사
+//        for (int i = 0; i < arr.length; i++) {
+//            temp[i] = arr[i];
+//        }
+//
+//        // 3. 새로운 데이터를 새 배열의 끝인덱스에 추가
+//        temp[temp.length - 1] = newData;
+//
+//        // 4. 주소값 이전
+//        arr = temp;
+//        temp = null;
+
+        push(40);
+        push(100);
+
+        System.out.println(Arrays.toString(arr));
+
+    }
+}
\ No newline at end of file
Index: src/day04/FieldAndLocal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/FieldAndLocal.java b/src/day04/FieldAndLocal.java
new file mode 100644
--- /dev/null	(date 1680140779638)
+++ b/src/day04/FieldAndLocal.java	(date 1680140779638)
@@ -0,0 +1,16 @@
+package day04;
+
+public class FieldAndLocal {
+
+    int a; //필드 / 넓은 영역에 사니까 값 0을 미리 넣어 놓음
+    double b; // 기본값 0.0
+    double[] d; // 배열의 기본값 null
+
+    void mm(int b) { //b: 매개변수 / 호출 하려면 밖에서 값을 쏴줄수 밖에 없음
+        int c = 5; // 지역변수 / c에 뭔가가 들어오는게 확정이 나야지 들어옴
+
+        System.out.println("a = " + a);
+        System.out.println("b = " + b);
+        System.out.println("c = " + c); // 우리가 값을 초기화 시켜줘야함
+    }
+}
Index: src/day04/Singer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/Singer.java b/src/day04/Singer.java
new file mode 100644
--- /dev/null	(date 1680140608991)
+++ b/src/day04/Singer.java	(date 1680140608991)
@@ -0,0 +1,19 @@
+package day04;
+
+public class Singer {
+
+    String singerName;
+    int b = 20;
+    // 클래스 아래에 있으면 필드
+
+    Singer(String sName) {
+
+        //지역 변수임
+    }
+    //괄호가 비어있는 생성자를 기본 생성자라고 하고 default constructor 라고 한다.
+    //클래스 안에서 생성자가 하나도 없을 경우 자동 생성
+//    Singer() {
+//
+//    }
+
+}
Index: src/day02/ArrayPop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/ArrayPop.java b/src/day02/ArrayPop.java
new file mode 100644
--- /dev/null	(date 1680069885069)
+++ b/src/day02/ArrayPop.java	(date 1680069885069)
@@ -0,0 +1,40 @@
+package day02;
+
+import java.util.Arrays;
+
+public class ArrayPop {
+
+    public static int pop() {
+
+        if(arr.length > 0){
+        //0. 삭제 대상 데이터 백업
+        int delTarget = arr[arr.length-1];
+
+        //1. 원본배열보다 1개 사이즈 작은 새 배열 셍상
+        int[] temp = new int[arr.length-1];
+
+        //2. 맨 마지막 데이터만 빼고 모두 새 배열에 보갓
+        for (int i = 0; i <temp.length ; i++) {
+            temp[i] = arr[i];
+        }
+        //3. 주소값 이전
+            arr = temp;
+            temp = null;
+
+            return delTarget;
+        }
+        System.out.println("삭제 데이터 없음");
+        return 0;
+        }
+
+    static int[] arr = {10, 20, 30, 40, 50};
+
+    public static void main(String[] args) {
+        pop();
+        pop();
+        pop();
+
+        System.out.println(Arrays.toString(arr));
+
+    }
+}
Index: src/day04/DanceLevel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/DanceLevel.java b/src/day04/DanceLevel.java
new file mode 100644
--- /dev/null	(date 1680139168659)
+++ b/src/day04/DanceLevel.java	(date 1680139168659)
@@ -0,0 +1,7 @@
+package day04;
+
+// 열거체 (상수 집합)
+public enum DanceLevel {
+
+    BEGINNER, AMATUER, PRO
+}
Index: src/day04/DancerMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/DancerMain.java b/src/day04/DancerMain.java
new file mode 100644
--- /dev/null	(date 1680139751760)
+++ b/src/day04/DancerMain.java	(date 1680139751760)
@@ -0,0 +1,22 @@
+package day04;
+// 실행용 클래스
+// 설계하지 않고 main메서드를 작성합니다
+public class DancerMain {
+
+    public static void main(String[] args) {
+
+         Dancer kim = new Dancer();
+         Dancer park = new Dancer("스트릿댄스");
+         Dancer jang = new Dancer("장동견", "목각댄스", DanceLevel.PRO);
+//        System.out.println(kim);
+        Singer song = new Singer("아무개");
+
+        System.out.println(kim.introduce());
+        System.out.println(park.introduce());
+
+        kim.dance();
+        park.dance();
+        jang.dance();
+
+    }
+}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1679972484402)
+++ b/.idea/uiDesigner.xml	(date 1679972484402)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/day02/ArrayPushQuiz.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/ArrayPushQuiz.java b/src/day02/ArrayPushQuiz.java
new file mode 100644
--- /dev/null	(date 1679975591195)
+++ b/src/day02/ArrayPushQuiz.java	(date 1679975591195)
@@ -0,0 +1,50 @@
+package day02;
+
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class ArrayPushQuiz {
+
+    public static void main(String[] args) {
+
+        String[] foodList = new String[0];
+//        String[] foodList = {};
+
+        /*
+            # 음식명을 입력받아서 배열에 순서대로 저장하는 코드
+            1. 음식명을 입력받는다.
+            2. 음식명에 '그만'이 입력되었는가?
+            2-1. 그만이 입력되었으면 종료한다.
+            2-2. 그만이 입력되지 않았으면 배열에 넣는다.
+            3. 배열의 크기를 1 증가시킨다.
+            4. 기존의 음식데이터를 증가된 새 배열에 복사한다.
+            5. 새로운 음식명을 마지막 위치에 추가한다.
+         */
+
+        System.out.println("# 먹고 싶은 음식을 입력하세요!!");
+        System.out.println("# 입력을 중지하려면 <그만>이라고 입력하세요.");
+
+        Scanner sc = new Scanner(System.in);
+
+        while (true) {
+
+            System.out.print(">> ");
+            String newFood = sc.nextLine();
+
+            if (newFood.equals("그만")) break;
+
+            String[] temp = new String[foodList.length + 1];
+            for (int i = 0; i < foodList.length; i++) {
+                temp[i] = foodList[i];
+            }
+            temp[temp.length - 1] = newFood;
+            foodList = temp;
+            temp = null;
+
+        }
+
+        System.out.println("먹고 싶은 음식리스트: " + Arrays.toString(foodList));
+
+    }
+
+}
\ No newline at end of file
Index: src/day03/ArraySearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/ArraySearch.java b/src/day03/ArraySearch.java
new file mode 100644
--- /dev/null	(date 1680050124483)
+++ b/src/day03/ArraySearch.java	(date 1680050124483)
@@ -0,0 +1,32 @@
+package day03;
+
+public class ArraySearch {
+    static String[] foods = {"삼겹살", "족발", "피자", "햄버거"};
+
+    public static int indexOf(String target) {
+        // 인덱스 탐색 알고리즘
+//        int index = -1;
+        for (int i = 0; i < foods.length; i++) {
+            if (target.equals(foods[i])) {
+//                index = i;
+//                break;
+                return i;
+            }
+        }
+        return -1;
+    }
+
+    public static void main(String[] args) {
+        foods[2] = "치킨";
+        // 인덱스 탐색 알고리즘
+        int index = -1;
+        String target = "족발";
+        for (int i = 0; i < foods.length; i++) {
+            if (target.equals(foods[i])) {
+                index = i;
+                break;
+            }
+        }
+        System.out.println("찾은 인덱스: " + index);
+    }
+}
Index: src/day03/ArraySearchQuiz.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/ArraySearchQuiz.java b/src/day03/ArraySearchQuiz.java
new file mode 100644
--- /dev/null	(date 1680052072537)
+++ b/src/day03/ArraySearchQuiz.java	(date 1680052072537)
@@ -0,0 +1,39 @@
+package day03;
+
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class ArraySearchQuiz {
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+    String[] tvxq = {"영웅재중", "최강창민", "시아준수", "믹키유천", "유노윤호"};
+    System.out.println("변경 전 정보 :" + Arrays.toString(tvxq));
+
+    while(true) {
+        System.out.println("수정할 멤버의 이름을 입력하세요.");
+        System.out.printf(">>");
+        String target = sc.nextLine();
+
+        int index = -1;
+        for (int i = 0; i < tvxq.length; i++) {
+            if (target.equals(tvxq[i])) {
+                index = i;
+                break;
+            }
+        }
+        if(index >-1) {
+                System.out.printf("%s의 별명을 변경합니다.\n", target);
+                System.out.printf(">>");
+                String nickname = sc.nextLine();
+                tvxq[index] = nickname;
+                System.out.println("변경 후 정보 : "+ Arrays.toString(tvxq));
+                break;
+
+            } else {
+                System.out.printf("%s은(는) 없는 이름입니다.", target);
+            }
+        } //end while
+        // sc.close();
+    }
+}
Index: src/day01/Scope.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day01/Scope.java b/src/day01/Scope.java
new file mode 100644
--- /dev/null	(date 1679884633022)
+++ b/src/day01/Scope.java	(date 1679884633022)
@@ -0,0 +1,23 @@
+package day01;
+/*control space bar : 자동완성키
+        Command + Option(alt) + V : 변수 추출
+        Command + Option(alt) + m : 메소드 추출
+        Ctrl + Command + O : 한글 문자에 맞는 변수명  추천.. ㄷ ㄷ ㄷ
+        ctrl + shift + / : *//* *//* 요 주석
+        ctrl + / : // 요 주석*/
+
+// java 클래스 이름 : 첫글자 대문자 띄어쓰기는 첫글자 다 대문자
+public class Scope {
+    public static void main(String[] args) {
+        //자바는 블록단위 스코프를 가짐
+        int n1 = 10;
+        int n2 = 20; // main 블록에서 생성된 변수
+
+//        if(true) {
+//            int n1 = 100;
+//            int n3 = n1+n2;
+//        }
+    } //end main
+
+    // int n3 = n1 + n2;
+}
Index: src/day03/ArrayDelete.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/ArrayDelete.java b/src/day03/ArrayDelete.java
new file mode 100644
--- /dev/null	(date 1680053097598)
+++ b/src/day03/ArrayDelete.java	(date 1680053097598)
@@ -0,0 +1,30 @@
+package day03;
+
+import java.util.Arrays;
+
+public class ArrayDelete {
+    public static void main(String[] args) {
+        int[] arr = {1, 3, 5, 7, 9, 11};
+        System.out.println("삭제 전: " + Arrays.toString(arr));
+
+        int delIndex = 3;
+        for (int i = delIndex; i < arr.length-1 ; i++) {
+            arr[i] = arr[i+1];
+        }
+
+//        arr[1] = arr[2]; //5번의 값을 3번의 자리에 이동
+//        arr[2] = arr[3];
+//        arr[3] = arr[4];
+//        arr[4] = arr[5];
+        //pop 기능 구현
+        int[] temp = new int[arr.length-1]; // 한칸 작게 빈 배열집 만들기
+        for (int i = 0; i < temp.length ; i++) { //temp.length 만큼 돌린다.
+            temp[i] =  arr[i]; //옮긴다.
+        }
+        arr = temp; temp = null; // 주소 바꾸고 템프 지워주기
+
+        System.out.println("삭제 후 : "+ Arrays.toString(arr));
+    }
+}
+
+
Index: src/day01/DataType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day01/DataType.java b/src/day01/DataType.java
new file mode 100644
--- /dev/null	(date 1679885379160)
+++ b/src/day01/DataType.java	(date 1679885379160)
@@ -0,0 +1,34 @@
+package day01;
+
+public class DataType {
+    public static void main(String[] args) {
+
+        int a = 30000;
+
+        /*
+        byte < int < long 크기 순
+        10 진수  10000 : 0011 1110 1000
+        8bit = 1 byte
+        1024byte = 1kb */
+
+        long money = 2342342342342L;
+        //L을 넣어 주어야 8 바이트로 할당 : 뒤에서 부터 거꾸로 이동
+        
+        //실수 리터럴은 기본 8 바이트 할당 : float 4바이트 : 다운캐스팅 
+        float f1 = 1.2345678F;
+        System.out.println("f1 = " + f1);
+
+        //논리 타입
+        boolean b1 = true;
+        boolean b2 = false;
+
+        //문자 타입 : 한글자
+        char c1 = 'A'; //65
+        System.out.println((char) (c1 + 1));
+        // c1 + 1 = 66 , (char) (c1 + 1) B
+
+        // 스트링은 기본타입이 아니고 객체다 => 객체는 함수를 가지고 있다.
+        // 동작과 속성, 기능의 조합이다.
+        String s = "hello";
+    }
+}
Index: src/day03/ArrayInsert.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/ArrayInsert.java b/src/day03/ArrayInsert.java
new file mode 100644
--- /dev/null	(date 1680054559596)
+++ b/src/day03/ArrayInsert.java	(date 1680054559596)
@@ -0,0 +1,48 @@
+package day03;
+
+import java.util.Arrays;
+
+public class ArrayInsert {
+
+    public static void main(String[] args) {
+
+        int[] arr = {10, 20, 30, 40, 50};
+
+        // 20이랑 30사이에 넣고 싶음
+        int targetIndex = 2;
+        int newData = 25; // 2번인덱스에 넣어야 함
+
+        System.out.println("추가전: " + Arrays.toString(arr));
+
+        // 1. 배열의 사이즈를 먼저 1 늘려놓음
+        int[] temp = new int[arr.length + 1];
+        // 2. 원본배열을 다 복사해놓음
+        for (int i = 0; i < arr.length; i++) {
+            temp[i] = arr[i];
+        }
+        // 3. 맨 뒤부터 타겟인덱스까지 한칸씩 뒤로 민다.
+
+        for (int i = temp.length - 1; i > targetIndex; i--) {
+            temp[i] = temp[i - 1];
+        }
+
+        /*temp[5] = temp[4];
+        temp[4] = temp[3];
+        temp[3] = temp[2];*/
+
+        // 4. 타겟인덱스 자리에 새 데이터를 넣는다.
+        temp[targetIndex] = newData;
+        // 5. 주소를 바꾼다.
+        arr = temp; temp = null;
+
+        System.out.println("추가후: " + Arrays.toString(arr));
+
+    }
+}
+
+
+
+
+
+
+
Index: src/day03/Matrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/Matrix.java b/src/day03/Matrix.java
new file mode 100644
--- /dev/null	(date 1680059299090)
+++ b/src/day03/Matrix.java	(date 1680059299090)
@@ -0,0 +1,94 @@
+package day03;
+
+import java.util.Arrays;
+
+public class Matrix {
+    public static void main(String[] args) {
+        int korScore = 10;
+        int mathScore = 20;
+        int engScore = 30;
+
+        int[] kimScores = {korScore, mathScore, engScore};
+        int[] lyoScores = {100, 34, 99};
+        int[] guScores = {10, 100, 11};
+
+        //2차원 배열
+        int[][] classScores = {kimScores, lyoScores, guScores};
+
+        System.out.println(classScores[0][0]);
+        System.out.println(kimScores[0]);
+        // 1차원 배열을 출력하면 배열의 주소값이 나옴
+
+        System.out.println(Arrays.toString(classScores));
+        //[[I@56cbfb61, [I@1134affc, [I@d041cf] 셋다 주소값이다.
+        System.out.println(classScores[1]);
+        System.out.println(lyoScores);
+        // 둘의 주소값은 똑같다.
+        System.out.println(Arrays.deepToString(classScores));
+        // [[10, 20, 30], [100, 34, 99], [10, 100, 11]]
+        // 2차원 배열의 초기화
+        int[][] arr2d = {
+                {10, 20, 30},
+                {40, 50, 60},
+                {70, 80, 90},
+                {100, 200, 300}
+        };
+
+        System.out.println("===========");
+        System.out.println(arr2d[1][2]); //60
+
+        int[] arr3 = arr2d[2]; //int 그냥 배열
+
+        //2차원 배열의 순회 : 2차원은 중첩으로 돌려야한다.
+        for ( int[] arr : arr2d) { //2차원 배열에서 1차원 배열 꺼내고
+            for (int n :arr) { // 1차원 배열에서 int 꺼내고
+                System.out.printf("%4d",n);
+                // 4d하면 출력할때 무조건 4칸 차지해라
+                // 영수증 출력 줄 맞출때 많이 씀
+            }
+            System.out.println(); //줄바꿈 라인
+        }
+        // 배열의 기본값
+        // 정수배열은 0이 기본값, 실수는 0.0 이 기본값 : null 이 아니다.
+        // boolean인 논리는 거짓이 기본값이다.
+        // String, Scanner 기본값 Null, char 기본값 공백
+        double[] numbers = new double[5];
+        System.out.println("=======");
+        System.out.println(Arrays.toString(numbers));
+
+        // 5행 4열의 정수 2차원배열을 생성만하고 싶다.
+        // 앞이 1차원 뒤에가 4칸
+        int[][] array2d = new int[5][4]; // 하나빼지 않고 그대로 쓴다.
+
+        //2차원 배열의 수정
+        array2d[1][3] = 100;  //array2d  : 2행 4열은 1 , 3으로 배열 표기
+        array2d[2][1] = 55;   //array2d  : 3행 2열은 2 , 1으로 배열 표기
+
+        array2d[3] = new int[] {9, 8, 7, 6}; // new int[]
+
+        System.out.println("==============");
+        for (int[] ints : array2d) {
+            for (int anInt : ints) {
+                System.out.printf("%4d", anInt);
+            }
+            System.out.println();
+        }
+        //3차원 배열
+        // 3차원 배열
+       int[][][] arr3d = {
+                {
+                        {10, 20},
+                        {30, 40}
+                },
+                {
+                        {50, 60},
+                        {70, 80}
+                },
+                {
+                        {90, 100},
+                        {200, 300}
+                }
+        };
+        System.out.println(arr3d[1][0][1]); //60에 접근
+;    }
+}
Index: src/day01/Casting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day01/Casting.java b/src/day01/Casting.java
new file mode 100644
--- /dev/null	(date 1679888136499)
+++ b/src/day01/Casting.java	(date 1679888136499)
@@ -0,0 +1,69 @@
+package day01;
+
+public class Casting {
+
+    public static void main(String[] args) {
+
+        byte a = 100;
+        int b = a;
+
+        //
+        // +8 :  00001000
+        // 1의보수 변환 : 비트 반전
+        // -8 :  11110111
+        // 2의보수 변환 : +1
+        //       11111000
+
+        //  00001000
+        //  11111000
+        //1 00000000
+
+        // MSB : 0은 양수 , 1은 음수
+        // c: 0 0000000 00000000 00000011 11101000
+        int c = 1000;
+
+        // d: 11101000
+        //    00010111
+        //         + 1
+        //    00011000
+        byte d = (byte) c;
+        System.out.println("d = " + d);
+
+        // 다운캐스팅은 데이터소실의 위험성이 있다.
+        double x = 3.5566;
+        int y = (int) x;
+        System.out.println("y = " + y);
+
+        short n = 20;
+        byte m = (byte) n;
+        System.out.println("m = " + m);
+
+
+        // 타입이 다른 데이터의 연산
+        // 큰 타입에 맞춰서 변환한 후 연산 진행
+        int k = 100;
+        double j = 5.5;
+
+        double v = k + j;
+
+        char c1 = 'A';
+        int alpha = 1;
+        System.out.println(c1 + alpha);
+
+        // int보다 작은데이터(byte, short, char)끼리의 연산은
+        // 무조건 둘 다 int로 변환된다.
+
+        byte b1 = 100;
+        byte b2 = 120;
+
+        int b3 = b1 * b2;
+
+        System.out.println('가' + 'A');
+
+        int g = 24;
+        double result = g / 5.0; // 혹은(double)g
+        System.out.println("result = " + result); //double이 int 보다 크니깐 실수로 표현
+
+
+    }
+}
\ No newline at end of file
Index: src/day03/MethodBasic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/MethodBasic.java b/src/day03/MethodBasic.java
new file mode 100644
--- /dev/null	(date 1680065916755)
+++ b/src/day03/MethodBasic.java	(date 1680065916755)
@@ -0,0 +1,71 @@
+package day03;
+
+public class MethodBasic {
+
+    //함수 : 코드 블록의 기능적 표현
+    // ex) add(10, 20)
+    //메서드 : 객체의 동작 표현
+    // ex) 카시오계산기.add(10,20)
+
+    //자바는 모든 것을 객체로 표현하고, 함수마저도 메서드로 처리한다.
+    //자바의 메서드는 클래스 내부에만 선언이 가능
+    //함수안에함수만드는게 안됨, 중첩이 안 됨
+
+    //2개의 정수를 더해서 리턴하는 매서드
+    //리턴하는 데이터의 타입을 앞에다가 쓰면 된다.
+    static int add(int n1, int n2){
+       return n1 + n2;
+    }
+
+    // 리턴이 없는 함수 : 앞에 void 사용
+    static void makeline() {
+        System.out.println("==============");
+        //담을 변수가 없어서 단독 호출 
+    }
+
+    // 여러 값을 리턴하고 싶은 경우
+    // 2개 정수 전달하면 덧셈, 뺄셈, 곱셈 결과를 리턴
+    // 리턴타입 int[] int 배열 
+    static int[] operateAll(int n1, int n2) {
+//        int[] results = {
+//                n1+n2,
+//                n1-n2,
+//                n1*n2
+//        };
+//        return results;
+        return new int[] {
+                n1 + n2,
+                n1 - n2,
+                n1 * n2
+        };
+    }
+
+    // 멀티파라미터 : n개의 정수를 전달받아 총합을 리턴 
+    // n개는 받을때 배열로 묶어서 받아라
+    static int addAll(int... numbers){
+        int total = 0;
+        for (int n:numbers) {
+            total += n;
+        }
+        return total;
+    }
+
+    //2개의 정수배열을 전달받아
+    //들어있는 숫자의 개수가 더 많은 배열ㅇ르 리턴하는 매서드
+    int[] compareNumbers(int[] arr1, int[] arr2) {
+        // 이 경우는 배열에 ... 쓰기 불가
+        return arr1.length > arr2.length ? arr1 : arr2;
+        // 삼항 연산자로 바꾸기 쌉가능
+    }
+    public static void main(String[] args) { // 배열은 ... 가능
+       int result = add(20,30);
+        System.out.println("result = "+ result);
+        // 클래스 안에 다른 함수 바깥쪽에 있어야 함.
+        
+        makeline();
+
+        int r1 = addAll(new int[]{10, 20, 30});
+        System.out.println("r1 = "+ r1);
+//        int r2 = addAll({10,30,40});
+    }
+}
Index: src/day03/MethodQuiz.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day03/MethodQuiz.java b/src/day03/MethodQuiz.java
new file mode 100644
--- /dev/null	(date 1680069940233)
+++ b/src/day03/MethodQuiz.java	(date 1680069940233)
@@ -0,0 +1,112 @@
+package day03;
+
+import java.util.Arrays;
+
+public class MethodQuiz {
+
+    static String[] foods = {"떡볶이", "치킨", "파스타"};
+
+    public static void main(String[] args) {
+
+        printFoods();
+        push("라면");
+        push("김치찌개");
+        printFoods();
+
+        // idx에 2가 리턴되어야 함.
+        int idx = indexOf("파스타");
+        System.out.println("idx = " + idx);
+        // idx에 4가 리턴되어야 함.
+        int idx2 = indexOf("김치찌개");
+        System.out.println("idx2 = " + idx2);
+        // idx에 -1이 리턴되어야 함.
+        int idx3 = indexOf("짜장면");
+        System.out.println("idx3 = " + idx3);
+
+        remove("김치찌개"); // foods배열에서 김치찌개 제거
+        remove("망고"); // 존재하지 않는 음식명입니다 출력.
+
+        printFoods();
+
+
+        boolean flag = include("파스타"); // 파스타 발견시 true 리턴
+        boolean flag2 = include("양념치킨"); // 양념치킨 미발견시 false 리턴
+
+        insert(3, "파인애플"); // 3번 인덱스에 파인애플 삽입
+        modify(2, "닭갈비");  // 2번 인덱스 데이터 닭갈비로 수정
+        //clear();  // foods배열 모든 데이터 삭제
+
+        printFoods();
+
+    }
+
+    // 원하는 사이즈 복사배열을 생성하는 함수
+    static String[] makeNew(int size) {
+        return new String[size];
+    }
+
+    //배열을 원하는 사이즈로 늘이거나 줄여서 카피해서 리턴하는 함수
+    static String[] copy(int more) {
+        int newSize = foods.length + more;
+        String[] temp = makeNew(newSize);
+
+        int loopCount = (more > 0) ? newSize - 1 : newSize;
+        for (int i = 0; i < loopCount; i++) {
+            temp[i] = foods[i];
+        }
+        return temp;
+    }
+
+    //배열에 마지막 위치에 데이터를 추가하는 함수
+    static void push(String newFood) {
+        foods = copy(+1);
+        foods[foods.length - 1] = newFood;
+    }
+    // 배열 내부데이터 출력함수
+    static void printFoods() {
+        System.out.println(Arrays.toString(foods));
+    }
+
+    static int indexOf(String targetName) {
+        for (int i = 0; i < foods.length; i++) {
+            if (targetName.equals(foods[i])) {
+                return i;
+            }
+        }
+        return -1;
+    }
+    static boolean include(String targetName) {
+        return indexOf(targetName) != -1;
+    }
+    static void pop() {
+        foods = copy(-1);
+    }
+
+    static void remove(String targetName) {
+        int index = indexOf(targetName);
+        if (!include(targetName)) {
+            System.out.println("존재하지 않는 음식명입니다");
+            return;
+        }
+        for (int i = index; i < foods.length-1; i++) {
+            foods[i] = foods[i+1];
+        }
+        pop();
+    }
+
+    static void modify(int targetIdx, String targetName) {
+        foods[targetIdx] = targetName;
+    }
+    static void clear() {
+        foods = new String[0];
+    }
+    static void insert(int targetIdx, String targetName) {
+        String[] temp = copy(1);
+        for (int i = temp.length - 1; i > targetIdx; i--) {
+            temp[i] = temp[i-1];
+        }
+        temp[targetIdx] = targetName;
+        foods = temp;
+    }
+
+}
\ No newline at end of file
Index: src/day04/Dancer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day04/Dancer.java b/src/day04/Dancer.java
new file mode 100644
--- /dev/null	(date 1680139280815)
+++ b/src/day04/Dancer.java	(date 1680139280815)
@@ -0,0 +1,59 @@
+package day04;
+
+//댄서의 설계도
+//설계도에는 main을 만들지 않습니다. main은 실행에 대한 용도이다. main은 단 하나만 있어야함
+
+public class Dancer {
+    //속성 (매서드 안에만 변수고 얘는 필드라고 부른다)
+    String dancerName; // 댄서 이름
+    String crewName; // 크루 이름
+    String genre; // 춤 장르
+    DanceLevel level; // 춤 수준 (0:초보자, 1:중수, 2:고수)
+
+    // 생성자 : 스카우터, 개발자(공돌이), 기술자
+    // 생성자도 함수개념, 리턴이 void로 고정되어 있고 void라고 쓰지 않음
+    // 리턴값은 생성한 객체의 주소값을 리턴
+    // 객체 생성시 필요한 데이터를 셋팅
+
+    Dancer () {
+        dancerName = "갑돌이";
+        crewName = "돌아이들";
+        genre = "아이돌댄스";
+        level = DanceLevel.AMATUER;
+    }
+// 생성자 오버로딩 (오버해서 적재)
+    Dancer (String dgenre) {
+        dancerName = "관종킹";
+        crewName = "써커스왕";
+        genre = dgenre;
+        level = DanceLevel.BEGINNER;
+    }
+
+    Dancer (String dName, String dGenre, DanceLevel dLevel) {
+        dancerName = dName;
+        crewName = "하하호호";
+        genre = dGenre;
+        level = DanceLevel.PRO;
+    }
+
+
+
+    // 기능 (메서드로 표현) : static을 붙이지 말 것
+    // 춤 추는 기능
+    void dance () {
+        System.out.println(genre + "춤을 열정적으로 춥니다.");
+    }
+
+    //스트레칭을 하는 기능
+    void stretch() {
+        System.out.println("몸을 유연하게 풉니다.");
+    }
+
+    //자기소개 기능
+    String introduce() {
+        return String.format("내 이름은 %s이고, %s팀에 소속되어 있습니다.", dancerName, crewName);
+        // printf 타입으로 리턴 원하면 String.format으로 써야 함
+    }
+
+
+}
Index: src/day02/StdIO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day02/StdIO.java b/src/day02/StdIO.java
new file mode 100644
--- /dev/null	(date 1680067419359)
+++ b/src/day02/StdIO.java	(date 1680067419359)
@@ -0,0 +1,49 @@
+package day02;
+
+import java.io.IOException;
+import java.util.Scanner;
+
+public class StdIO {
+    public static void main(String[] args) throws IOException {
+        String dog = "멍멍이", cat = "야옹이";
+
+        System.out.println(dog);
+        System.out.println(cat);
+
+        int month = 10;
+        int day = 3;
+        String anni = "개천절";
+
+        System.out.println(
+                month + "월"
+                        +day + "일은 "
+                        +anni +"입니다");
+        // %d : 정수, %s : 문자열, %f : 실수
+
+
+
+
+        double rate = 25.4567;
+        // %f : 무조건 자리수를 6자리로 표현 => 내가 자리수를 제한한다.
+        System.out.printf("오늘의 할인율은 %.4f 입니다.\n", rate);
+        System.out.printf("오늘의 할인율은 %.2f 입니다.\n", rate);
+        System.out.printf("오늘의 할인율은 %.8f 입니다.\n", rate);
+        System.out.printf("오늘의 할인율은 %.1f%%입니다.\n", rate);
+        // 퍼센트 두 개 써야함
+
+        //표준 입력
+
+        Scanner sc = new Scanner(System.in);
+        String str = sc.nextLine(); //숫자고 뭐고 일단 문자로 받기
+
+        int result = 0; //선언을 밖에서 해줘야함
+
+        try {
+            result = Integer.parseInt(str); //문자열을 정수로 변환 가능
+        } catch(Exception e){
+            System.out.println("정수로 입력바람");
+        }
+        System.out.println("result = "+ result);
+
+    }
+}
Index: src/fruit/Apple.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/fruit/Apple.java b/src/fruit/Apple.java
new file mode 100644
--- /dev/null	(date 1680143505996)
+++ b/src/fruit/Apple.java	(date 1680143505996)
@@ -0,0 +1,9 @@
+package fruit;
+
+public class Apple {
+
+    public Apple() {
+        System.out.println("fruits의 apple");
+
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"27e38ea9-a8bb-4036-ad0f-2d47c4394f45\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/README.md\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/java_basic.iml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/Hello.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2NZkFXBUA9BWoaRRwfvJSsqOmGK\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"27e38ea9-a8bb-4036-ad0f-2d47c4394f45\" name=\"Changes\" comment=\"\" />\n      <created>1679878889315</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1679878889315</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision af8d391b3797cf58cb5dc6c547d377d4563ef143)
+++ b/.idea/workspace.xml	(date 1680231010081)
@@ -4,16 +4,50 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="27e38ea9-a8bb-4036-ad0f-2d47c4394f45" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/java_basic.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Hello.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+    <list default="true" id="27e38ea9-a8bb-4036-ad0f-2d47c4394f45" name="Changes" comment="initial commit">
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day01/Casting.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day01/DataType.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day01/Scope.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/ArrayBasic.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/ArrayCopy.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/ArrayPop.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/ArrayPush.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/ArrayPushQuiz.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/StdIO.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day02/SwitchExample.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/ArrayDelete.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/ArrayInsert.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/ArraySearch.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/ArraySearchQuiz.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/Matrix.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/MethodBasic.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day03/MethodQuiz.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/DanceLevel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/Dancer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/DancerMain.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/FieldAndLocal.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/FieldMain.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/PackagePractice.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/Singer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/StringCompare.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/array/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day04/array/StringList.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/Player.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/Gender.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/Member.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/MemberRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/MemberView.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/Test.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/day05/member/요구사항.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/fruit/Apple.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/fruit/Banana.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/fruit/Grape.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/juice/Apple.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Hello.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -23,29 +57,121 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Enum" />
         <option value="Class" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="jar://$PROJECT_DIR$/../Library/Java/JavaVirtualMachines/corretto-11.0.18/Contents/Home/lib/src.zip!/java.base/java/io/InputStream.java" root0="SKIP_INSPECTION" />
+    <setting file="jar://$PROJECT_DIR$/../Library/Java/JavaVirtualMachines/corretto-11.0.18/Contents/Home/lib/src.zip!/java.base/java/lang/System.java" root0="SKIP_INSPECTION" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
+  </component>
   <component name="ProjectId" id="2NZkFXBUA9BWoaRRwfvJSsqOmGK" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
-  }
-}]]></component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;
+  }
+}</component>
+  <component name="RecentsManager">
+    <key name="CreateClassDialog.RecentsKey">
+      <recent name="day05.player.member" />
+    </key>
+  </component>
+  <component name="RunManager" selected="애플리케이션.day05.member.Main">
+    <configuration name="Casting" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="day01.Casting" />
+      <module name="java_basic" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="day01.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="day04.array.Main" />
+      <module name="java_basic" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="day04.array.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Test" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="day05.player.member.Test" />
+      <module name="java_basic" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="day05.player.member.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="day05.member.Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="day05.member.Main" />
+      <module name="java_basic" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="day05.member.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="day05.player.Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="day05.player.Main" />
+      <module name="java_basic" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="day05.player.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="애플리케이션.day05.member.Main" />
+        <item itemvalue="애플리케이션.Test" />
+        <item itemvalue="애플리케이션.day05.player.Main" />
+        <item itemvalue="애플리케이션.Casting" />
+        <item itemvalue="애플리케이션.Main" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -55,7 +181,83 @@
       <option name="presentableId" value="Default" />
       <updated>1679878889315</updated>
     </task>
+    <task id="LOCAL-00001" summary="initial commit">
+      <created>1679881112187</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1679881112187</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="initial commit" />
+    <option name="LAST_COMMIT_MESSAGE" value="initial commit" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-method">
+          <url>file://$PROJECT_DIR$/src/day02/ArrayBasic.java</url>
+          <line>5</line>
+          <properties class="day02.ArrayBasic" method="main">
+            <option name="EMULATED" value="true" />
+            <option name="WATCH_EXIT" value="false" />
+          </properties>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-method">
+          <url>file://$PROJECT_DIR$/src/day03/ArraySearchQuiz.java</url>
+          <line>11</line>
+          <properties class="day03.ArraySearchQuiz">
+            <option name="EMULATED" value="true" />
+            <option name="WATCH_EXIT" value="false" />
+          </properties>
+          <option name="timeStamp" value="3" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-method">
+          <url>file://$PROJECT_DIR$/src/day01/Casting.java</url>
+          <line>4</line>
+          <properties class="day01.Casting" method="main">
+            <option name="EMULATED" value="true" />
+            <option name="WATCH_EXIT" value="false" />
+          </properties>
+          <option name="timeStamp" value="6" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/day02/ArrayPush.java</url>
+          <line>4</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/day03/ArraySearchQuiz.java</url>
+          <line>5</line>
+          <option name="timeStamp" value="4" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/day04/DancerMain.java</url>
+          <line>3</line>
+          <option name="timeStamp" value="5" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/day05/member/Main.java</url>
+          <line>2</line>
+          <option name="timeStamp" value="9" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
